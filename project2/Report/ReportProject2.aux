\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\newlabel{FirstPage}{{}{1}{}{section*.1}{}}
\@writefile{toc}{\contentsline {title}{Project 2}{1}{section*.2}}
\@writefile{toc}{\contentsline {abstract}{Abstract}{1}{section*.1}}
\@writefile{toc}{\contentsline {section}{\numberline {}Introduction}{1}{section*.3}}
\@writefile{toc}{\contentsline {section}{\numberline {}Theory}{1}{section*.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}One electron in a 3-dimensional Harmonic Oscillator Potential Well}{1}{section*.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Two Electrons in a 3-dimensional Harmonic Oscillator Potential Well}{1}{section*.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Unitary Transformations}{1}{section*.7}}
\@writefile{toc}{\contentsline {section}{\numberline {}Algorithms and methods}{2}{section*.8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Composing a matrix eigenvalue problem}{2}{section*.9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Jacobi's Rotation Algorithm}{2}{section*.10}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Function that rotates the given matrix in order to minimize the specified off-diagonal matrix element. Computes the rotated eigenvectors\relax }}{3}{figure.1}}
\newlabel{fig1}{{1}{3}{Function that rotates the given matrix in order to minimize the specified off-diagonal matrix element. Computes the rotated eigenvectors\relax }{figure.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Jacobi Rotation algorithm that produces a diagonal matrix revealing the eigenvalues of the original tridiagonal matrix. This function also organizes the eigenvalues and eigenvectors in ascending order.\relax }}{3}{figure.2}}
\newlabel{fig2}{{2}{3}{Jacobi Rotation algorithm that produces a diagonal matrix revealing the eigenvalues of the original tridiagonal matrix. This function also organizes the eigenvalues and eigenvectors in ascending order.\relax }{figure.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {}Results and discussions}{3}{section*.11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Unit Tests}{3}{section*.12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Jacobi Algorithm vs. Armadillo Eigensym}{3}{section*.13}}
\bibcite{Armadillo}{{1}{}{{}}{{}}}
\bibcite{PhysRevA.48.3561}{{2}{}{{}}{{}}}
\bibcite{Computational Physics}{{3}{}{{}}{{}}}
\bibdata{ReportProject2Notes}
\bibstyle{apsrev4-1}
\citation{REVTEX41Control}
\citation{apsrev41Control}
\providecommand\NAT@force@numbers{}\NAT@force@numbers
\newlabel{timingtable}{{2}{4}{Jacobi Rotation algorithm that produces a diagonal matrix revealing the eigenvalues of the original tridiagonal matrix. This function also organizes the eigenvalues and eigenvectors in ascending order.\relax }{section*.13}{}}
\@writefile{lot}{\contentsline {table}{\numberline {I}{\ignorespaces Time for completion of both eigenvalue algorithms for a variety of mesh points. These times were averaged over interacting and non-interacting cases for a variety of frequencies. The Jacobi algorithm is increasingly less efficient when compared to the Armadillo Eigensym function for higher numbers of mesh points. At 500 mesh points, the Jacobi algorithm used more time than reasonably available.\relax }}{4}{table.1}}
\newlabel{table1}{{I}{4}{Time for completion of both eigenvalue algorithms for a variety of mesh points. These times were averaged over interacting and non-interacting cases for a variety of frequencies. The Jacobi algorithm is increasingly less efficient when compared to the Armadillo Eigensym function for higher numbers of mesh points. At 500 mesh points, the Jacobi algorithm used more time than reasonably available.\relax }{table.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Wavefunction for two Electrons in a Harmonic Oscillator Potential}{4}{section*.14}}
\@writefile{toc}{\contentsline {section}{\numberline {}Conclusions}{4}{section*.16}}
\@writefile{toc}{\contentsline {section}{\numberline {}References}{4}{section*.17}}
\@writefile{toc}{\contentsline {section}{\numberline {}References}{4}{section*.18}}
\newlabel{LastBibItem}{{3}{4}{Time for completion of both eigenvalue algorithms for a variety of mesh points. These times were averaged over interacting and non-interacting cases for a variety of frequencies. The Jacobi algorithm is increasingly less efficient when compared to the Armadillo Eigensym function for higher numbers of mesh points. At 500 mesh points, the Jacobi algorithm used more time than reasonably available.\relax }{section*.18}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Ground state wave function for the non-interacting and interacting cases at various frequencies. We see that as the frequency increases, the repulsive term in the potential becomes less These plots were made using the eigenvectors produced by the Armadillo Eigensym function.\relax }}{5}{figure.caption.15}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{probability}{{3}{5}{Ground state wave function for the non-interacting and interacting cases at various frequencies. We see that as the frequency increases, the repulsive term in the potential becomes less These plots were made using the eigenvectors produced by the Armadillo Eigensym function.\relax }{figure.caption.15}{}}
\newlabel{LastPage}{{}{5}{}{}{}}
